name: Build Docker Image

on:
  push:
    branches:
      - master
      - patch/*

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: 'arn:aws:iam::827659017777:role/github-actions'
          audience: sts.amazonaws.com
          aws-region: eu-central-1
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: 'Build, tag, and push image to Amazon ECR'
        env:
          ECR_REGISTRY: 827659017777.dkr.ecr.eu-central-1.amazonaws.com
          ECR_REPOSITORY: tycho-indexer
        run: >
          COMMIT_COUNT=$(git rev-list $(git describe --tags --abbrev=0)..HEAD
          --count)

          if [ "$COMMIT_COUNT" -ne "0" ]; then
              CONTAINER_TAG=$(git describe --tags --abbrev=0)-SNAPSHOT.$(git rev-parse --short HEAD)
          else
              CONTAINER_TAG=$(git describe --tags --abbrev=0)
          fi


          CHECK_IMAGE=$(aws ecr describe-images --repository-name
          $ECR_REPOSITORY --image-ids imageTag=$CONTAINER_TAG --region
          eu-central-1 || true)

          if [ -z "$CHECK_IMAGE" ]; then
              docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$CONTAINER_TAG .
              docker push $ECR_REGISTRY/$ECR_REPOSITORY:$CONTAINER_TAG
          else
            echo "$ECR_REGISTRY/$ECR_REPOSITORY:$CONTAINER_TAG already present - build skipped"
          fi
